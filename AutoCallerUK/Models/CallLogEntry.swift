//
//  CallLogEntry.swift
//  HealthcareCallApp
//
//  Core Data model for call history and logs
//

import Foundation
import CoreData
import UIKit

@objc(CallLogEntry)
public class CallLogEntry: NSManagedObject {
    
    @NSManaged public var id: UUID
    @NSManaged public var setupID: UUID
    @NSManaged public var providerName: String
    @NSManaged public var phoneNumber: String
    @NSManaged public var timestamp: Date
    @NSManaged public var status: String // "success", "failed", "in_progress"
    @NSManaged public var duration: Int32 // in seconds
    @NSManaged public var attempts: Int16
    @NSManaged public var errorMessage: String?
    @NSManaged public var callIdentifier: String? // CallKit call UUID
    
    // Computed properties
    var callStatus: CallStatus {
        get {
            return CallStatus(rawValue: status) ?? .failed
        }
        set {
            status = newValue.rawValue
        }
    }
    
    var formattedDuration: String {
        guard duration > 0 else { return "0:00" }
        let minutes = duration / 60
        let seconds = duration % 60
        return String(format: "%d:%02d", minutes, seconds)
    }
    
    var formattedTimestamp: String {
        let formatter = DateFormatter()
        formatter.dateStyle = .medium
        formatter.timeStyle = .short
        return formatter.string(from: timestamp)
    }
    
    var isSuccessful: Bool {
        return callStatus == .success
    }
    
    override public func awakeFromInsert() {
        super.awakeFromInsert()
        id = UUID()
        timestamp = Date()
        status = CallStatus.failed.rawValue
        duration = 0
        attempts = 1
    }
}

// MARK: - Call Status Enum
enum CallStatus: String, CaseIterable {
    case success = "success"
    case failed = "failed"
    case inProgress = "in_progress"
    
    var displayName: String {
        switch self {
        case .success:
            return "Success"
        case .failed:
            return "Failed"
        case .inProgress:
            return "In Progress"
        }
    }
    
    var color: UIColor {
        switch self {
        case .success:
            return UIColor.systemGreen
        case .failed:
            return UIColor.systemRed
        case .inProgress:
            return UIColor.systemBlue
        }
    }
}

// MARK: - Core Data Extensions
extension CallLogEntry {
    
    // Note: fetchRequest() is auto-generated by Core Data when Codegen is set to Category/Extension
    // Removed duplicate fetchRequest() method to avoid compilation conflicts
    
}